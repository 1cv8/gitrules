#Использовать cmdline
#Использовать 1commands

Перем ОсновнойКаталогПравил;

Процедура Инициализация()

КонецПроцедуры

Процедура ЗапуститьВыгрузкуПравилВФайлы(КаталогИзПараметров, КаталогПроекта) Экспорт

	Сообщить("START precommit gitrules");
	УстановитьОсновнойКаталог(КаталогИзПараметров);
	СписокФайлов = ПолучитьСписокПравил();
	УстановитьОсновнойКаталог(КаталогПроекта);
	Для Каждого ПутьКФайлу Из СписокФайлов Цикл
		Сообщить("FILE: " + ПутьКФайлу);
		КаталогПравил = СоздатьКаталогиДляПравил(КаталогИзПараметров, КаталогПроекта, ПутьКФайлу);
		Сообщить("Каталог правил:" + КаталогПравил);
		УстановитьОсновнойКаталог(КаталогПравил);
		РазложитьФайлПравила(ПутьКФайлу);	
	КонецЦикла;

	Сообщить("Add to index git");
	УстановитьОсновнойКаталог(КаталогИзПараметров);
	ДобавитьПравилаВИндексGIT();
	Сообщить("END");

КонецПроцедуры

Процедура РазложитьПравилаКонвертации(Знач ПутьКПравилам, Знач КаталогРаспаковки) Экспорт
	
	Сообщить("START Export");
	РазобратьПравилаОбмена.ВыполнитьРазбор(КаталогРаспаковки, ПутьКПравилам);
	Сообщить("END");

КонецПроцедуры

Процедура СобратьПравилаКонвертации(Знач КаталогИсходников, Знач КаталогСборки) Экспорт
	Сообщить("START Assembly");
	СобратьПравилаОбмена.ВыполнитьСборку(КаталогИсходников, КаталогСборки);
	Сообщить("END");
КонецПроцедуры

Процедура ИнициализироватьКаталогИсходников(КаталогПроекта) Экспорт

	Файл = Новый Файл(КаталогПроекта);
	Если Файл.Существует() Тогда
		ОчиститьИсходныйКаталог(КаталогПроекта);
		Попытка
			УдалитьФайлы(КаталогПроекта);
		Исключение
		КонецПопытки;
	КонецЕсли;
	СоздатьКаталог(КаталогПроекта);

КонецПроцедуры

Процедура УстановитьОсновнойКаталог(Знач Значение) Экспорт
	ОсновнойКаталогПравил = Значение; 
КонецПроцедуры

Функция ПолучитьОсновнойКаталог() Экспорт
	Возврат ОсновнойКаталогПравил; 
КонецФункции

Функция ПолучитьСписокПравил() Экспорт
	Массив = Новый Массив;
	МассивФайлов = НайтиФайлы(ОсновнойКаталогПравил, "*.xml", Истина);
	Для Каждого Файл Из МассивФайлов Цикл
		Массив.Добавить(Файл.ПолноеИмя);
	КонецЦикла;
	Возврат Массив;
КонецФункции

Функция РазложитьФайлПравила(ПутьКФайлу) Экспорт
	РазобратьПравилаОбмена.ВыполнитьРазбор(ОсновнойКаталогПравил, ПутьКФайлу);
КонецФункции

Процедура ДобавитьПравилаВИндексGIT() Экспорт
	Команда = Новый Команда;
	Команда.УстановитьРабочийКаталог(ОсновнойКаталогПравил);
	Команда.УстановитьКоманду("git add *");
	КодВозврата = Команда.Исполнить();
КонецПроцедуры

Процедура ОчиститьИсходныйКаталог(КаталогПравил) Экспорт
	РазобратьПравилаОбмена.ОчиститьИсходныйКаталог(КаталогПравил);
КонецПроцедуры

Функция РазложитьСтрокуВМассивПодстрок(Знач Строка, Знач Разделитель = ",", Знач ПропускатьПустыеСтроки = Неопределено, СокращатьНепечатаемыеСимволы = Ложь) Экспорт
	Возврат ОбщиеУтилиты.РазложитьСтрокуВМассивПодстрок(Строка, Разделитель, ПропускатьПустыеСтроки, СокращатьНепечатаемыеСимволы);
КонецФункции

Функция СоздатьКаталогиДляПравил(КаталогИсходников, КаталогПроекта, ПутьКПравилам) Экспорт

	Файл = Новый Файл(ПутьКПравилам);
	Каталог = ОбщиеУтилиты.ПолучитьПутьВРабочемКаталоге(Файл.Путь, КаталогИсходников);
	Файл = Неопределено;
	МассивКаталогов = РазложитьСтрокуВМассивПодстрок(Каталог, ПолучитьРазделительПути()); 
	Если МассивКаталогов.Количество() = 0 Тогда
		Возврат КаталогИсходников;
	КонецЕсли;

	ТекущийКаталог = КаталогПроекта;
	Для Каждого ЭлементМассива Из МассивКаталогов Цикл
		ТекущийКаталог = ОбъединитьПути(ТекущийКаталог, ЭлементМассива);
		Если Не ОбщиеУтилиты.ЭтотКаталогСуществует(ТекущийКаталог) Тогда
			СоздатьКаталог(ТекущийКаталог);
		КонецЕсли;
	КонецЦикла;

	Возврат ТекущийКаталог;

КонецФункции

ОсновнойКаталогПравил = "";

Инициализация();